{"task_id": "gatesv", "completion": "always @(posedge clk) begin\n    out_both = 3'b0;\n    out_any = 4'b0;\n    out_different = 4'b0;\n    \n    if (in[0] == 1'b1) begin\n        out_both = out_both | 3'b001;\n        out_any = out_any | 4'b0001;\n        out_different = out_different ^ 4'b0001;\n    end\n    \n    if (in[1] == 1'b1) begin\n        out_both = out_both | 3'b010;\n        out_any = out_any | 4'b0010;\n        out_different = out_different ^ 4'b0010;\n    end\n    \n    if (in[2] == 1'b1) begin\n        out_both = out_both | 3'b100;\n        out_any = out_any | 4'b0100;\n        out_different = out_different ^ 4'b0100;\n    end\n    \n    if (in[3] == 1'b1) begin\n        out_any = out_any | 4'b1000;\n        out_different = out_different ^ 4'b1000;\n    end\nend\n\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "gatesv", "completion": "assign out_both = {in[3] && in[2] && in[1] && in[0], in[2] && in[1] && in[0], in[1] && in[0]};\nassign out_any = {in[3] || in[2] || in[1] || in[0], in[2] || in[1] || in[0], in[1] || in[0], in[0]};\nassign out_different = {in[3] != in[2], in[2] != in[1], in[1] != in[0], in[0] != in[3]};\nendmodule", "result": "failed: 181 out of 213 samples.", "passed": false}
{"task_id": "rotate100", "completion": "always @(posedge clk)\nbegin\n    if(load)\n        q <= data;\n    else if(ena[0])\n        q <= {q[98:1], 1'b0};\n    else if(ena[1])\n        q <= {1'b0, q[99:1]};\nend\nendmodule", "result": "failed: 3782 out of 4005 samples.", "passed": false}
{"task_id": "rotate100", "completion": "always @(posedge clk)\nbegin\n    if(load)\n        q <= data;\n    else if (ena == 2'b01)\n        q[99:50] <= q[99:50];\n    else if (ena == 2'b10)\n        q[49:0] <= q[49:0];\n    else\n        q <= q;\nend\nendmodule", "result": "failed: 3292 out of 4005 samples.", "passed": false}
{"task_id": "review2015_fsmonehot", "completion": "always @(posedge clk) begin\n    case (state)\n        10'b0000000001: begin\n            B3_next <= 1'b0;\n            S_next <= 1'b0;\n            S1_next <= 1'b1;\n            Count_next <= 1'b1;\n            Wait_next <= 1'b0;\n            done <= 1'b0;\n            counting <= 1'b1;\n            shift_ena <= 1'b0;\n            if (d) begin\n                S_next <= 1'b1;\n                S1_next <= 1'b0;\n                Count_next <= 1'b0;\n                Wait_next <= 1'b1;\n                done <= 1'b0;\n                counting <= 1'b0;\n                shift_ena <= 1'b1;\n            end\n        end\n        10'b0000000010: begin\n            B3_next <= 1'b0;\n            S_next <= 1'b1;\n            S1_next <= 1'b0;\n            Count_next <= 1'b0;\n            Wait_next <= 1'b1;\n            done <= 1'b0;\n            counting <= 1'b0;\n            shift_ena <= 1'b1;\n            if (ack) begin\n                B3_next <= 1'b1;\n                S_next <= 1'b0;\n                S1_next <= 1'b1;\n                Count_next <= 1'b1;\n                Wait_next <= 1'b0;\n                done <= 1'b0;\n                counting <= 1'b1;\n                shift_ena <= 1'b0;\n            end\n        end\n        10'b0000000100: begin\n            B3_next <= 1'b1;\n            S_next <= 1'b0;\n            S1_next <= 1'b1;\n            Count_next <= 1'b1;\n            Wait_next <= 1'b0;\n            done <= 1'b0;\n            counting <= 1'b1;\n            shift_ena <= 1'b0;\n            if (done_counting) begin\n                B3_next <= 1'b0;\n                S_next <= 1'b0;\n                S1_next <= 1'b0;\n                Count_next <= 1'b0;\n                Wait_next <= 1'b1;\n                done <= 1'b1;\n                counting <= 1'b0;\n                shift_ena <= 1'b0;\n            end\n        end\n        default: begin\n            B3_next <= 1'b0;\n            S_next <= 1'b0;\n            S1_next <= 1'b0;\n            Count_next <= 1'b0;\n            Wait_next <= 1'b1;\n            done <= 1'b0;\n            counting <= 1'b0;\n            shift_ena <= 1'b0;\n        end\n    endcase\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "review2015_fsmonehot", "completion": "always@(posedge clk)\nbegin\n    case(state)\n        10'b0000000001: begin\n            B3_next = 1;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 0;\n            counting = 0;\n            shift_ena = 0;\n            if(d) Wait_next = 1;\n        end\n        10'b0000000010: begin\n            B3_next = 0;\n            S_next = 1;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 0;\n            counting = 1;\n            shift_ena = 0;\n        end\n        10'b0000000100: begin\n            B3_next = 0;\n            S_next = 0;\n            S1_next = 1;\n            Count_next = 1;\n            Wait_next = 0;\n            done = 0;\n            counting = 1;\n            shift_ena = 1;\n        end\n        10'b0000001000: begin\n            B3_next = 0;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 1;\n            Wait_next = 0;\n            done = 0;\n            counting = 1;\n            shift_ena = 1;\n        end\n        10'b0000010000: begin\n            B3_next = 0;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 0;\n            counting = 0;\n            shift_ena = 0;\n            if(counting && !ack) Wait_next = 1;\n        end\n        10'b0000100000: begin\n            B3_next = 0;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 1;\n            counting = 0;\n            shift_ena = 0;\n        end\n        10'b0001000000: begin\n            B3_next = 1;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 1;\n            counting = 0;\n            shift_ena = 0;\n        end\n        10'b0010000000: begin\n            B3_next = 0;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 1;\n            counting = 0;\n            shift_ena = 0;\n        end\n        10'b0100000000: begin\n            B3_next = 0;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 1;\n            counting = 0;\n            shift_ena = 0;\n        end\n        10'b1000000000: begin\n            B3_next = 0;\n            S_next = 0;\n            S1_next = 0;\n            Count_next = 0;\n            Wait_next = 0;\n            done = 1;\n            counting = 0;\n            shift_ena = 0;\n        end\n    endcase\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "dff8ar", "completion": "always @(posedge clk, posedge areset)\nbegin\n    if (areset)\n        q <= 0;\n    else\n        q <= d;\nend\nendmodule", "result": "passed", "passed": true}
{"task_id": "dff8ar", "completion": "always @(posedge clk or posedge areset)\nbegin\n    if (areset)\n        q <= 0;\n    else\n        q <= d;\nend\nendmodule", "result": "passed", "passed": true}
{"task_id": "kmap3", "completion": "always @(posedge clk) begin\n    out = (a & b) | (c & d);\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "kmap3", "completion": "always @(posedge clk) \nbegin \n    case ({a, b, c, d}) \n        4'b0000: out <= 1'b0; \n        4'b0001: out <= 1'b1; \n        4'b0010: out <= 1'b1; \n        4'b0011: out <= 1'b0; \n        4'b0100: out <= 1'b1; \n        4'b0101: out <= 1'b0; \n        4'b0110: out <= 1'b0; \n        4'b0111: out <= 1'b1; \n        4'b1000: out <= 1'b0; \n        4'b1001: out <= 1'b1; \n        4'b1010: out <= 1'b1; \n        4'b1011: out <= 1'b0; \n        4'b1100: out <= 1'b1; \n        4'b1101: out <= 1'b0; \n        4'b1110: out <= 1'b0; \n        4'b1111: out <= 1'b1; \n    endcase \nend \nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "lemmings1", "completion": "always@(posedge clk or posedge areset)\nbegin\n    if (areset) \n    begin\n        walk_left <= 0;\n        walk_right <= 0;\n    end \n    else \n    begin\n        if (bump_left)\n            walk_left <= ~walk_left;\n        if (bump_right)\n            walk_right <= ~walk_right;\n    end\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "lemmings1", "completion": "always @(posedge clk) begin\n    if (areset) begin\n        walk_left <= 0;\n        walk_right <= 0;\n    end else begin\n        if (bump_left) walk_left <= ~walk_left;\n        if (bump_right) walk_right <= ~walk_right;\n    end\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "2013_q2afsm", "completion": "always @(posedge clk or negedge resetn)\nbegin\n    if (!resetn)\n        g <= 4'b0000;\n    else\n        g <= r;\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "2013_q2afsm", "completion": "always @(posedge clk, negedge resetn)\nbegin\n    if (!resetn)\n        g <= 0;\n    else\n        g <= r;\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "fsm_hdlc", "completion": "always @(posedge clk) begin\n    if (reset) begin\n        disc <= 0;\n        flag <= 0;\n        err <= 0;\n    end else begin\n        if (in) begin\n            disc <= ~disc;\n            flag <= 1;\n            err <= 0;\n        end else begin\n            flag <= 0;\n            err <= ~err;\n        end\n    end\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "fsm_hdlc", "completion": "reg flag_reg = 0;\nreg disc_reg = 0;\nreg err_reg = 0;\n\nalways @(posedge clk or posedge reset)\nbegin\n    if (reset) begin\n        flag_reg <= 0;\n        disc_reg <= 0;\n        err_reg <= 0;\n    end else begin\n        flag_reg <= in;\n        disc_reg <= ~in;\n        err_reg <= in ^ disc_reg;\n    end\nend\n\nassign disc = disc_reg;\nassign flag = flag_reg;\nassign err = err_reg;\n\nendmodule", "result": "failed: 750 out of 801 samples.", "passed": false}
{"task_id": "bugs_mux2", "completion": "```\nverilog\nalways @(posedge clk) \nbegin\n    case (sel)\n        1'b0: out <= a;\n        1'b1: out <= b;\n    endcase\nend\nendmodule\n```", "result": "failed: syntax error.", "passed": false}
{"task_id": "bugs_mux2", "completion": "always@(posedge clk)\nbegin\n\tcase(sel)\n\t\t0: out <= a;\n\t\t1: out <= b;\n\tendcase\nend\nendmodule", "result": "failed: compile error.", "passed": false}
{"task_id": "review2015_count1k", "completion": "always @(posedge clk or posedge reset)\nbegin\n    if (reset) q <= 10'b0;\n    else q <= q + 10'b1;\nend\nendmodule", "result": "failed: 3131 out of 8027 samples.", "passed": false}
{"task_id": "review2015_count1k", "completion": "always @(posedge clk or posedge reset)\nbegin\n    if (reset)\n        q <= 10'h000;\n    else\n        q <= q + 1;\nend\nendmodule", "result": "failed: 3131 out of 8027 samples.", "passed": false}
